swagger: '2.0'
info:
  title: Online Support Ticket System API
  version: '1.0'
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /register:
    post:
      summary: Register a new user
      description: Create a new user with their role
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              name:
                type: string
              username:
                type: string
              user_id:
                type: string
              role:
                type: string
                enum: [student, support_staff, admin]
            required:
              - email
              - password
              - role
      responses:
        201:
          description: User registered successfully
        400:
          description: Bad Request

  /login:
    post:
      summary: Authenticate a user
      description: Authenticate a user and generate a token for subsequent requests
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
            required:
              - email
              - password
      responses:
        200:
          description: User authenticated successfully
        401:
          description: Unauthorized user

  /tickets:
    post:
      summary: Create a new support ticket
      description: Create a new support ticket for a particular concern or query
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
            required:
              - title
              - content
      responses:
        201:
          description: Support ticket created successfully
        401:
          description: Unauthorized
        400:
          description: Bad Request

    get:
      summary: Retrieve a list of all support tickets
      description: Fetches the list of all support tickets 
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: List of support tickets retrieved successfully
        401:
          description: Unauthorized

  /tickets/search:
    get:
      summary: Search for similar tickets
      description: Search for similar tickets based on user input
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: query
          name: query
          type: string
          required: true
      responses:
        200:
          description: Search results retrieved successfully
        401:
          description: Unauthorized

  /tickets/{ticket_id}/like:
    put:
      summary: Add a like to a support ticket
      description: Add a like or +1 to an existing support ticket
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: ticket_id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: Like registered successfully
        401:
          description: Unauthorized
        404:
          description: Support ticket not found
  /tickets/{ticket_id}/submitreply:
    post:
      summary: Submit reply to ticket
      description: Submit reply to ticket
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: ticket_id
          type: integer
          format: int64
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
            required:
              - content
      responses:
        200:
          description: Reply submitted
        401:
          description: Unauthorized
        404:
          description: Support ticket not found
  /tickets/{ticket_id}/{reply_id}:
    put:
      summary: Edit reply
      description: Edit content of reply
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: ticket_id
          type: integer
          format: int64
          required: true
        - in: path
          name: reply_id
          type: integer
          format: int64
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
            required:
              - content
      responses:
        200:
          description: Edited reply successfully
        401:
          description: Unauthorized
        404:
          description: Reply not found
    delete:
      summary: Delete reply
      description: Delete reply
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: ticket_id
          type: integer
          format: int64
          required: true
        - in: path
          name: reply_id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: Reply deleted successfully
        401:
          description: Unauthorized
        404:
          description: Reply not found
  /tickets/{ticket_id}/resolve:
    put:
      summary: Mark a support ticket as resolved
      description: Mark a support ticket as resolved by the support team
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: ticket_id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: Support ticket marked as resolved
        401:
          description: Unauthorized
        404:
          description: Support ticket not found

  /notifications:
    post:
      summary: Send a notification to the concerned user
      description: Send a notification to the concerned user when a ticket is resolved
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              user_id:
                type: string
              message:
                type: string
            required:
              - user_id
              - message
      responses:
        201:
          description: Notification sent successfully
        401:
          description: Unauthorized
        400:
          description: Bad Request
    get:
      summary: Retrieve a list of notifications for a user
      description: Retrieve a list of notifications for a user
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: List of notifications retrieved successfully
        401:
          description: Unauthorized
  /faqs:
    post:
      summary: Add a new FAQ entry
      description: Add a new FAQ entry 
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              question:
                type: string
              answer:
                type: string
              category_id:
                type: integer
                format: int64
            required:
              - question
              - answer
              - category_id
      responses:
        201:
          description: FAQ entry created successfully
        401:
          description: Unauthorized
        400:
          description: Bad Request
    get:
      summary: Retrieve a list of all FAQs
      description: Retrieve a list of all FAQs, with the option to filter by category
      parameters:
        - in: query
          name: category_id
          type: integer
          format: int64
      responses:
        200:
          description: List of FAQs retrieved successfully

  /faqs/{faq_id}:
    put:
      summary: Update an existing FAQ entry
      description: Update an existing FAQ entry (only accessible by support admins)
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: faq_id
          type: integer
          format: int64
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              question:
                type: string
              answer:
                type: string
              category_id:
                type: integer
                format: int64
            required:
              - question
              - answer
              - category_id
      responses:
        200:
          description: FAQ entry updated successfully
        401:
          description: Unauthorized
        404:
          description: FAQ entry not found
    delete:
      summary: Delete an existing FAQ entry
      description: Delete an existing FAQ entry (only accessible by support admins)
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: faq_id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: FAQ entry deleted successfully
        401:
          description: Unauthorized
        404:
          description: FAQ entry not found
  /categories:
    post:
      summary: Add a new FAQ category
      description: Add a new FAQ category (only accessible by support admins)
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
            required:
              - name
      responses:
        201:
          description: FAQ category created successfully
        401:
          description: Unauthorized
        400:
          description: Bad Request

    get:
      summary: Retrieve a list of all FAQ categories
      description: Retrieve a list of all FAQ categories
      responses:
        200:
          description: List of FAQ categories retrieved successfully
  /categories/{category_id}:
    put:
      summary: Update an existing FAQ category
      description: Update an existing FAQ category (only accessible by support admins)
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: category_id
          type: integer
          format: int64
          required: true
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
            required:
              - name
      responses:
        200:
          description: FAQ category updated successfully
        401:
          description: Unauthorized
        404:
          description: FAQ category not found
    delete:
      summary: Delete an existing FAQ category
      description: Delete an existing FAQ category (only accessible by support admins)
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: category_id
          type: integer
          format: int64
          required: true
      responses:
        200:
          description: FAQ category deleted successfully
        401:
          description: Unauthorized
        404:
          description: FAQ category not found
